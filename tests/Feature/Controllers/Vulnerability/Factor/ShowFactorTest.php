<?php

use App\Models\Factor;
use App\Models\User;
use App\Models\Vulnerability;
use Illuminate\Testing\TestResponse;
use Laravel\Sanctum\Sanctum;

beforeEach(function () {
    $this->routeName = 'vulnerabilities.factors.show';

    $this->user = User::factory()->create();
    Sanctum::actingAs($this->user);

    $this->vulnerability = Vulnerability::factory()->create([
        'user_id' => $this->user->id,
    ]);

    $this->factor = Factor::factory()->create([
        'vulnerability_id' => $this->vulnerability->id,
    ]);
});

it('responds with status 404 if vulnerability not found', function () {
    $route = route($this->routeName, ['vulnerability' => 123456, 'factor' => $this->factor->id]);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertNotFound();
});

it('responds with status 404 if factor not found', function () {
    $route = route($this->routeName, ['vulnerability' => $this->vulnerability->id, 'factor' => 123456]);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertNotFound();
});

it('returns factor', function () {
    $route = route($this->routeName, ['vulnerability' => $this->vulnerability->id, 'factor' => $this->factor->id]);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response
        ->assertOk()
        ->assertJsonFragment(array_merge([
            'id' => $this->factor->id,
        ]));
});
