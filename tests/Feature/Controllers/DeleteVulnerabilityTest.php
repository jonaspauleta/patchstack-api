<?php

use Illuminate\Testing\TestResponse;
use Modules\Organizations\Models\Cluster;
use Modules\Organizations\Models\Organization;

beforeEach(function () {
    $this->method = 'DELETE';
    $this->routeName = 'organizations.clusters.id.delete';

    $this->org = Organization::factory()->create();
    $this->cluster = Cluster::factory()->for($this->org)->create();

    $this->route = route($this->routeName, [
        'org' => $this->org,
        'cluster' => $this->cluster,
    ]);
});

it('responds with status 404 if organization not found', function () {
    $this->assertNotFoundOnNonExistingOrganization($this->method, route($this->routeName, [
        'org' => 123,
        'cluster' => $this->cluster,
    ]));
});

it('responds with status 404 if cluster not found', function () {
    $this->assertNotFoundOnNonExistingCluster(
        $this->method,
        route($this->routeName, ['org' => $this->org, 'cluster' => 123])
    );
});

it('responds with status 404 if cluster does not belong to provided org', function () {
    $newCluster = Cluster::factory()->create([
        'organization_id' => $this->org->id,
    ]);

    $newOrg = Organization::factory()->create();

    $this->assertNotFoundOnNonExistingCluster(
        $this->method,
        route($this->routeName, ['org' => $newOrg->id, 'cluster' => $newCluster->id])
    );
});

it('deletes cluster', function () {
    $this->assertModelExists($this->cluster);

    /** @var TestResponse $response */
    $response = $this->delete($this->route);

    $response->assertNoContent();

    $this->assertDatabaseMissing($this->cluster, ['id' => $this->cluster->id]);
});
