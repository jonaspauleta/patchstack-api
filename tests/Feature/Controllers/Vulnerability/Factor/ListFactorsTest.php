<?php

use App\Models\Factor;
use App\Models\User;
use App\Models\Vulnerability;
use Illuminate\Testing\TestResponse;
use Laravel\Sanctum\Sanctum;

beforeEach(function () {
    $this->routeName = 'vulnerabilities.factors.index';

    $this->user = User::factory()->create();
    Sanctum::actingAs($this->user);

    $this->vulnerability = Vulnerability::factory()->create([
        'user_id' => $this->user->id,
    ]);

    for ($i = 0; $i < 3; $i++) {
        Factor::factory()->create([
            'vulnerability_id' => $this->vulnerability->id,
        ]);
    }
});

it('returns 404 if vulnerability not found', function () {
    $route = route($this->routeName, ['vulnerability' => 123456]);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertNotFound();
});

it('expects /factors to return data', function (array $query, int $expects) {
    $route = route($this->routeName, ['vulnerability' => $this->vulnerability->id] + $query);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertOk()->assertJsonCount($expects, 'data');
})->with([
    ['data' => [], 'expects' => 3],
    ['data' => ['page' => 1], 'expects' => 3],
    ['data' => ['page' => 2], 'expects' => 0],
    ['data' => ['per_page' => 3], 'expects' => 3],
    ['data' => ['per_page' => 1], 'expects' => 1],
]);
