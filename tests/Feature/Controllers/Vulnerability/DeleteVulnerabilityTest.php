<?php

use App\Models\User;
use App\Models\Vulnerability;
use Illuminate\Testing\TestResponse;
use Laravel\Sanctum\Sanctum;

beforeEach(function () {
    $this->routeName = 'vulnerabilities.delete';

    $this->user = User::factory()->create();
    Sanctum::actingAs($this->user);

    $this->vulnerability = Vulnerability::factory()->create([
        'user_id' => $this->user->id,
    ]);
});

it('responds with status 404 if vulnerability not found', function () {
    $route = route($this->routeName, ['vulnerability' => $this->vulnerability->id + 1]);

    /** @var TestResponse $response */
    $response = $this->deleteJson($route);

    $response->assertNotFound();
});

it('responds with status 403 if user not authorized to delete vulnerability', function () {
    $route = route($this->routeName, ['vulnerability' => $this->vulnerability->id]);

    $user = User::factory()->create([
        'is_admin' => false,
    ]);

    Sanctum::actingAs($user);

    /** @var TestResponse $response */
    $response = $this->deleteJson($route);

    $response->assertForbidden();
});

it('deletes vulnerability', function () {
    $route = route($this->routeName, ['vulnerability' => $this->vulnerability->id]);

    /** @var TestResponse $response */
    $response = $this->deleteJson($route);

    $response
        ->assertOk()
        ->assertJsonStructure([
            'message',
        ]);
});
