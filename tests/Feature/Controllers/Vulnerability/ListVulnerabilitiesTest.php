<?php

use App\Models\User;
use App\Models\Vulnerability;
use Illuminate\Testing\TestResponse;
use Laravel\Sanctum\Sanctum;

beforeEach(function () {
    $this->routeName = 'vulnerabilities.index';

    $this->user = User::factory()->create();
    Sanctum::actingAs($this->user);

    for ($i = 0; $i < 3; $i++) {
        Vulnerability::factory()->create([
            'user_id' => $this->user->id,
        ]);
    }
});

it('expects /vulnerabilities to return data', function (array $query, int $expects) {
    $route = route($this->routeName, $query);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertOk()->assertJsonCount($expects, 'data');
})->with([
    ['data' => [], 'expects' => 3],
    ['data' => ['page' => 1], 'expects' => 3],
    ['data' => ['page' => 2], 'expects' => 0],
    ['data' => ['per_page' => 3], 'expects' => 3],
    ['data' => ['per_page' => 1], 'expects' => 1],
]);

it('expects /vulnerabilities filter by user_id to return data', function (array $query, int $expects) {
    $route = route($this->routeName, $query);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertOk()->assertJsonCount($expects, 'data');
})->with([
    ['data' => ['filter[user_id]' => 1], 'expects' => 3],
]);

it('can include user /vulnerabilities  to return data', function () {
    $route = route($this->routeName, ['include[]' => 'user']);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertOk()->assertJsonStructure([
        'data' => [
            '*' => ['user' => []],
        ],
    ]);
});

it('can include factors /vulnerabilities  to return data', function () {
    $route = route($this->routeName, ['include[]' => 'factors']);

    /** @var TestResponse $response */
    $response = $this->get($route);

    $response->assertOk()->assertJsonStructure([
        'data' => [
            '*' => ['factors' => []],
        ],
    ]);
});
